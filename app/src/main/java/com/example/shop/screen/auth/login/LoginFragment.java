package com.example.shop.screen.auth.login;import android.content.Context;import android.content.Intent;import android.os.Build;import android.os.Bundle;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.Toast;import androidx.annotation.NonNull;import androidx.annotation.Nullable;import androidx.annotation.RequiresApi;import com.example.shop.R;import com.example.shop.networking.auth.FetchCredentialUseCase;import com.example.shop.screen.common.BaseFragment;import com.example.shop.screen.productlist.ProductListActivity;import com.google.android.gms.auth.api.signin.GoogleSignIn;import com.google.android.gms.auth.api.signin.GoogleSignInAccount;import com.google.android.gms.auth.api.signin.GoogleSignInClient;import com.google.android.gms.auth.api.signin.GoogleSignInOptions;import com.google.android.gms.common.api.ApiException;import com.google.android.gms.tasks.Task;import com.google.firebase.auth.AuthResult;import com.google.firebase.auth.FirebaseUser;public class LoginFragment extends BaseFragment implements LoginViewMvc.Listener,        FetchCredentialUseCase.Listener {    private LoginViewMvc mViewMvc;    private FetchCredentialUseCase mFetchCredentialUseCase;    private static final String TAG = "LoginFragment";    private int RC_SIGN_IN = 1;    private GoogleSignInAccount account;    private GoogleSignInClient mGoogleSignInClient;    @RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)    @Nullable    @Override    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {        mViewMvc = getCompositionRoot().getViewMvcFactory().getLoginViewMvc(null);        mFetchCredentialUseCase = getCompositionRoot().getFetchCredentialUseCase();        mViewMvc.registerListener(this);        // Configure Google Sign In        GoogleSignInOptions gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)                .requestIdToken(getString(R.string.default_web_client_id))                .requestEmail()                .build();        mGoogleSignInClient = GoogleSignIn.getClient(getActivity().getApplicationContext(),gso);        return mViewMvc.getRootView();    }    @Override    public void onStop() {        super.onStop();        mViewMvc.unregisterListener(this);        mFetchCredentialUseCase.unregisterListener(this);    }    @Override    public void onStart() {        super.onStart();        mViewMvc.registerListener(this);        mFetchCredentialUseCase.registerListener(this);    }    @Override    public void onAttach(@NonNull Context context) {        super.onAttach(context);    }    @Override    public void onActivityResult(int requestCode, int resultCode, Intent data) {        super.onActivityResult(requestCode, resultCode, data);        // Result returned from launching the Intent from GoogleSignInApi.getSignInIntent(...);        if (requestCode == RC_SIGN_IN) {            Task<GoogleSignInAccount> task = GoogleSignIn.getSignedInAccountFromIntent(data);            try {                // Google Sign In was successful, authenticate with Firebase                GoogleSignInAccount account = task.getResult(ApiException.class);                Log.d(TAG, "firebaseAuthWithGoogle:" + account.getId());                mFetchCredentialUseCase.FetchUserCredential(getActivity(), account.getIdToken());            } catch (ApiException e) {                // Google Sign In failed, update UI appropriately                Log.w(TAG, "Google sign in failed", e);                // ...            }        }    }    @Override    public void onLoginWithGoogle() {        Intent signInIntent = mGoogleSignInClient.getSignInIntent();        startActivityForResult(signInIntent, RC_SIGN_IN);    }    @Override    public void onLoginInWithCredential(String userName, String pass) {        mFetchCredentialUseCase.LoginWithEmailAndPassWord(userName,pass);    }    @Override    public void notifyUserCredential(FirebaseUser user) {        Toast.makeText(getActivity(), "Login Success: " + user.getDisplayName(),                Toast.LENGTH_SHORT).show();        Intent intent = new Intent(getActivity().getApplicationContext(), ProductListActivity.class);        startActivity(intent);    }    @Override    public void notifyUserCredentialFailed(Exception exception) {        Toast.makeText(getContext(),"Login failed: " + exception.getLocalizedMessage()                ,Toast.LENGTH_LONG).show();    }    @Override    public void notifyLoginWithEmailSuccess(AuthResult result) {        Toast.makeText(getContext(),"Login Success: " + result.getUser()  ,Toast.LENGTH_LONG).show();        Intent intent = new Intent(getActivity().getApplicationContext(), ProductListActivity.class);        startActivity(intent);    }    @Override    public void notifyLoginWithEmailFailed(Exception exception) {        Toast.makeText(getContext(),"Sign in With Email  failed: " + exception.getLocalizedMessage()                ,Toast.LENGTH_LONG).show();    }    @Override    public void notifySignInWithEmailSuccess(AuthResult result) {    }    @Override    public void notifySignInWithEmailFailed(Exception exception) {    }}